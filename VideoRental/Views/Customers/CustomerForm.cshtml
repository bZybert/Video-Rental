@model VideoRental.ViewModel.NewCustomerViewModel
@{
    ViewData["Title"] = "CustomerForm";
}

<h2>New Customer</h2>

@using (@Html.BeginForm("Save", "Customers"))
{
    @* Pokaże listę errorów, gdy dodamy parametr true, wyświetli podany przez nas komunikat*@
    @Html.ValidationSummary(true, "Please fix the following errors")
    <div class="form-group">
        @Html.LabelFor(x => x.Customer.Name)
        @Html.TextBoxFor(x => x.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Customer.Name)

    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Customer.MembershipTypeId)
        @Html.DropDownListFor(x => x.Customer.MembershipTypeId, new SelectList(Model.MembershipType, "Id", "Name"), "Select Membership Types", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Customer.BirthDate)
        @Html.TextBoxFor(x => x.Customer.BirthDate, "{0:d MMM yyyy}", new { @class = "form-control" })  @* w drugim parametrze podajemy format daty tutaj "{0:d MMM yyyy}"*@
        @Html.ValidationMessageFor(x => x.Customer.BirthDate)
    </div>



    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(x => x.Customer.IsSubscribedToNewsletter) Subscribed to Newsletter ?
        </label>
    </div>

    @Html.HiddenFor(x => x.Customer.Id)
    @Html.AntiForgeryToken()  @** dodajemy tutaj i na akcji Save aby ktoś obcy nie mógł pobrać naszych danych z formularza  *@
    <button type="submit" class="btn btn-primary">Save</button>
}
